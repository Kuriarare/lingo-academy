Successfully received certificate.
Certificate is saved at: /etc/letsencrypt/live/srv570363.hstgr.cloud-0001/fullchain.pem
Key is saved at:         /etc/letsencrypt/live/srv570363.hstgr.cloud-0001/privkey.pem
This certificate expires on 2024-11-02.
These files will be updated when the certificate renews.
Certbot has set up a scheduled task to automatically renew this certificate in the background.


 key: fs.readFileSync('/etc/letsencrypt/live/backend.srv570363.hstgr.cloud/privkey.pem'),
  cert: fs.readFileSync('/etc/letsencrypt/live/backend.srv570363.hstgr.cloud/fullchain.pem')

sudo nano /var/www/lingo-academy-server/src/server.js


ssh root@195.110.58.68

sudo nano /etc/nginx/nginx.conf
sudo nano /etc/nginx/conf.d/lingo-academy-server.conf
sudo nano /etc/nginx/conf.d/lingo-academy-client.conf
sudo nginx -t
sudo systemctl restart nginx



server {
    listen 443 ssl;
    server_name srv570363.hstgr.cloud;

    ssl_certificate /etc/letsencrypt/live/srv570363.hstgr.cloud/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/srv570363.hstgr.cloud/privkey.pem;

    location / {
        proxy_pass http://localhost:4000; # Ajusta esto si tu servidor backend usa un puerto diferente
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

scp -r C:\Users\Koatth\Desktop\lingo-platform\front-r\dist\* root@195.110.58.68:/var/www/lingo-academy-client => maquina local powershell



contexto:
hostname = srv570363.hstgr.cloud
IP address = 195.110.58.68
Current OS = AlmaLinux 8 with Webmin
aca tengo mi cliente desplegado srv570363.hstgr.cloud. Es una conexion HTTPS ya tengo el certificado. Quiero que sepas que estoy usando un VPS donde tengo alojado mi cliente
la ruta es /var/www/lingo-academy-client. En este archivo estan los documentos. Procedere a mostrarle la configuracion de nginx: 

sudo nano /etc/nginx/nginx.conf
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    include /etc/nginx/conf.d/*.conf;

    # Load configuration files for the sites-enabled directory.
    include /etc/nginx/sites-enabled/*;
}

Ahora quiero mostrarte la configuracion de mi cliente:
sudo nano /etc/nginx/sites-available/lingo-academy-client.conf
server {

    server_name srv570363.hstgr.cloud www.srv570363.hstgr.cloud;

        root /var/www/lingo-academy-client;

    location / {

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }



    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/srv570363.hstgr.cloud-0001/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/srv570363.hstgr.cloud-0001/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}

server {
    if ($host = www.srv570363.hstgr.cloud) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = srv570363.hstgr.cloud) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    listen [::]:80;

    server_name srv570363.hstgr.cloud www.srv570363.hstgr.cloud;
    return 404; # managed by Certbot




}

de esto no debemos tocar nada, ya que de esta manera se esta sirviendo en HTTPS mi cliente. 
Tarea: necesito que me ayudes a crear la configuracion correcta en site-available y sites-enabled para mi servidor de back que recive requests y tambien maneja webRTC por este
motivo debe ser todo en HTTPS la ruta de mi servidor es var/www/lingo-academy-server y ahi esta escuchando en el puerto local 4000. Necesito configurar nginx para que mi cliente
interactue con mi server y se entiendan en HTTPS aun cuando los dos estan en la misma VPS, me entiendes?














server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name backend.srv570363.hstgr.cloud;

    ssl_certificate /etc/letsencrypt/live/backend.srv570363.hstgr.cloud/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/backend.srv570363.hstgr.cloud/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass http://127.0.0.1:4000;  # Redirige a tu servidor Node.js en el puerto 4000
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

server {
    listen 80;
    listen [::]:80;

    server_name backend.srv570363.hstgr.cloud;

    location / {
        return 301 https://$host$request_uri;  # Redirige HTTP a HTTPS
    }
}

















server {
    listen 80;
    server_name srv570363.hstgr.cloud;

    # Redirigir todas las solicitudes HTTP a HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name srv570363.hstgr.cloud;

    # Configuración SSL
    ssl_certificate /etc/letsencrypt/live/srv570363.hstgr.cloud-0001/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/srv570363.hstgr.cloud-0001/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:AES128-SHA256:AES256-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:AES1$    ssl_prefer_server_ciphers on;

    # Configuración de proxy
    location / {
        proxy_pass http://backend.srv570363.hstgr.cloud:8000; # Redirige las solicitudes al servidor Express en el puerto 8000
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr; # Pasa la IP real del cliente al servidor Express
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Pasa la cadena de IPs a través de proxies
        proxy_set_header X-Forwarded-Proto $scheme; # Pasa el esquema de protocolo (http o https)
    }
}
